<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MostPopularBands" xml:space="preserve">
    <value>Beliebteste Marken</value>
  </data>
  <data name="Discount_UpTo90" xml:space="preserve">
    <value>Bis zu 90 % Rabatt</value>
  </data>
  <data name="TrendingItems" xml:space="preserve">
    <value>Trendige Artikel</value>
  </data>
  <data name="TrendingItemsDesc" xml:space="preserve">
    <value>Kaufen Sie ein und erhalten Sie Ihre Lieblingsartikel zu erstaunlichen Preisen!</value>
  </data>
  <data name="PopularCategories" xml:space="preserve">
    <value>Erkunden Sie beliebte Kategorien</value>
  </data>
  <data name="DiscoverMore" xml:space="preserve">
    <value>Entdecke mehr. Zahle weniger.</value>
  </data>
  <data name="DiscoverHottestDestinations" xml:space="preserve">
    <value>Entdecken Sie die heißesten nahe gelegenen Reiseziele in Ihrer Umgebung</value>
  </data>
  <data name="GrowingWithBrands" xml:space="preserve">
    <value>Wir wachsen kontinuierlich mit 50+ vertrauenswürdigen Marken</value>
  </data>
  <data name="FindBestProduct" xml:space="preserve">
    <value>Finde das beste Produkt
in unserem Geschäft</value>
  </data>
  <data name="ShopNow" xml:space="preserve">
    <value>Jetzt einkaufen</value>
  </data>
  <data name="AboutUsDesc1" xml:space="preserve">
    <value>Diese einzigartige Webanwendung wurde entwickelt, um eine Plattform für die Registrierung und den Kauf bereitzustellen. Sie können Ihre Besitztümer auf Cicosafe zum Wiederverkauf registrieren. Wenn Sie Ihre Besitztümer als zum Verkauf verfügbar markieren, werden sie auf dieser Website Cicocic angeboten. Genau wie der Verkäufer wurden diese Waren als zertifizierter Verkäufer überprüft und als registriertes Eigentum bestätigt</value>
  </data>
  <data name="AboutUs" xml:space="preserve">
    <value>ÜBER UNS</value>
  </data>
  <data name="AboutUsDesc2" xml:space="preserve">
    <value>Dies bietet Ihnen als Käufer Sicherheit. Alle Waren bei Cicocic sind einzigartig und werden, ähnlich wie bei der Übertragung eines Autos, physisch mit der gesamten Historie übergeben. Bei Cicocic sind Sie garantiert sicher einkaufen. Die angebotenen Waren wurden ebenfalls anhand ihrer IMEI- und Seriennummern überprüft, um sicherzustellen, dass sie nicht in bekannten Registern als gestohlen gemeldet sind</value>
  </data>
  <data name="RelatedLinks" xml:space="preserve">
    <value>GERELATEERDE </value>
  </data>
  <data name="LatestProduct" xml:space="preserve">
    <value>NEUESTES PRODUKT</value>
  </data>
  <data name="OurContact" xml:space="preserve">
    <value>UNSER KONTAKT</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Cico Concepts BV</value>
  </data>
  <data name="CompanyPhone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="ShopByPopularCategories" xml:space="preserve">
    <value>Einkaufen nach Beliebtheit</value>
  </data>
  <data name="ShopByCategories" xml:space="preserve">
    <value>Einkaufen nach Kategorien</value>
  </data>
  <data name="DeliverTo" xml:space="preserve">
    <value>Liefern nach</value>
  </data>
  <data name="FilterBy" xml:space="preserve">
    <value>Filtern nach</value>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>Schlüsselwörter</value>
  </data>
  <data name="EnterKeywords" xml:space="preserve">
    <value>Schlüsselwörter eingeben</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preis</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>bis</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>FILTERN</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Kategorien</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sortieren nach</value>
  </data>
  <data name="Popular" xml:space="preserve">
    <value>Beliebt</value>
  </data>
  <data name="NewArrival" xml:space="preserve">
    <value>Neu eingetroffen</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Rabatt</value>
  </data>
  <data name="WeFound" xml:space="preserve">
    <value>Wir haben gefunden</value>
  </data>
  <data name="ItemsFor" xml:space="preserve">
    <value>Artikel für</value>
  </data>
  <data name="ProductDescription" xml:space="preserve">
    <value>Produktbeschreibung</value>
  </data>
  <data name="AdditionalInformation" xml:space="preserve">
    <value>Zusätzliche Informationen</value>
  </data>
  <data name="RatingReviews " xml:space="preserve">
    <value>Bewertungen &amp; Rezensionen</value>
  </data>
  <data name="Availability" xml:space="preserve">
    <value>Verfügbarkeit</value>
  </data>
  <data name="InStock" xml:space="preserve">
    <value>Auf Lager</value>
  </data>
  <data name="BuildYear" xml:space="preserve">
    <value>Baujahr</value>
  </data>
  <data name="OrderSoon" xml:space="preserve">
    <value>Nur noch 1 auf Lager – bald bestellen</value>
  </data>
  <data name="AddToCart" xml:space="preserve">
    <value> In den Warenkorb</value>
  </data>
  <data name="YouMightAlsoLike" xml:space="preserve">
    <value>Das Könnte Dir Auch Gefallen</value>
  </data>
</root>