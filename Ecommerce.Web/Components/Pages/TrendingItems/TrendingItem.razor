@using Ecommerce.Shared.Entities.TrendingProducts;
@inject IProductVariantService productVariantService


   
<div id="trending-items" class="section-container">
    <!-- BEGIN container -->
    <div class="container">
        <!-- BEGIN section-title -->
        <h4 class="section-title clearfix">
            <span class="flex-1">
                Trending Items
                <small>Shop and get your favourite items at amazing prices!</small>
            </span>
            <div class="btn-group">
                <a href="#" class="btn"><i class="fa fa-angle-left fs-16px"></i></a>
                <a href="#" class="btn"><i class="fa fa-angle-right fs-16px"></i></a>
            </div>
        </h4>
        <div class="row gx-2">
            @if (trendingProducts != null && trendingProducts.Count() > 0)
            {
                @foreach (var trendingProduct in trendingProducts)
                {


                    <div class="col-lg-2 col-md-4 col-sm-6">
                        <!-- BEGIN item -->
                        <div class="item item-thumbnail">
                            <a href="/Product?Id=@trendingProduct.ProductVariantId" class="item-image">
                                <img src="@UrlHelper.GetImageUrl(trendingProduct.ProductVariantId, trendingProduct.DefaultImageUrl)" alt="" />
                                @if (trendingProduct.discountPercentage > 0)
                                {
                                    <div class="discount">@trendingProduct.discountPercentage% OFF</div>
                                }

                            </a>
                            <div class="item-info">
                                <h4 class="item-title">
                                    <a href="/Product?Id=@trendingProduct.ProductVariantId">@trendingProduct.Name<br /></a>
                                </h4>
                                <p class="item-desc">@trendingProduct.Description</p>
                                <div class="item-price">$@trendingProduct.VariantPrice</div>
                                <div class="item-discount-price">$@trendingProduct.ProductPrice</div>
                            </div>
                        </div>
                        <!-- END item -->
                    </div>

                    @*</div>*@

                }
            }

        </div>
    </div>
    </div>
@code {
    private List<TrendingProductDto> trendingProducts = new List<TrendingProductDto>();
    protected override async Task OnInitializedAsync()
    {
        await LoadTrendingProduct();
 
    }

    private async Task LoadTrendingProduct()
    {
        try
        {
            var response = await productVariantService.GetTrendingProductVariantsAsync();
            if (response.Success)
            {
                trendingProducts = response.Data;
             
            }
            else
            {
               
            }
        }

        catch (Exception ex)
        {

        }
    }
}
