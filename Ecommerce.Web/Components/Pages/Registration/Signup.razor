
@page "/Signup"
@using Ecommerce.Shared.Entities;
@using Ecommerce.Shared.Services.Customers;
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject ProtectedLocalStorage ProtectedLocalStor

<style>
    .card:hover {
        /* Remove any specific hover styles */
        transform: none;
        transition: none;
        box-shadow: none;
        animation: none;
    }
</style>
<EditForm Model="@customer" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />


    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-9 col-lg-9">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h4 class="text-center mb-4 mt-4">Get Registered</h4>
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg"
                                     class="img-fluid" alt="Phone image">
                                <h4 class="text-center mb-4 mt-4">
                                    <span style="font-family:'Sarpanch', sans-serif; font-size: 1.2em;">Cicocic</span> Awaits!
                                </h4>

                            </div>

                            <div class="col-md-6">
                                <div class="py-4 px-3 mw-400">
                                    <div class="input-field">
                                        <label for="FirstName">First Name</label>
                                        <InputText id="FirstName" class="form-control" @bind-Value="customer.FirstName" />
                                        <span class="text-danger"><ValidationMessage For="@(() => customer.FirstName)" /></span>
                                    </div>

                                    <div class="input-field mt-2">
                                        <label for="LastName">Last Name</label>
                                        <InputText id="LastName" class="form-control" @bind-Value="customer.LastName" />


                                        <span class="text-danger"> <ValidationMessage For="@(() => customer.LastName)" /></span>
                                    </div>

                                    <div class="input-field mt-2">
                                        <label for="Email">Email</label>
                                        <InputText id="Email" class="form-control" @bind-Value="customer.Email" />

                                        <span class="text-danger"> <ValidationMessage For="@(() => customer.Email)" /></span>
                                    </div>

                                    <div class="input-field mt-2">
                                        <label for="Password">Password</label>
                                        <InputText id="Password" class="form-control" @bind-Value="customer.Password" type="password" />
                                        <span class="text-danger"> <ValidationMessage For="@(() => customer.Password)" /></span>
                                    </div>

                                    <div class="mt-4">
                                        <button type="submit" class="btn btn-primary w-100">Sign Up</button>
                                    </div>
                                    @if (!string.IsNullOrEmpty(errorMessage))
                                        {
                                        <div class="mt-2 text-danger text-center">
                                            @errorMessage
                                        </div>
                                        }
                                    <div class="member mt-1">
                                        <span>Already a member?</span>
                                        <a class="text-decoration-none text-primary" href="/Login">Sign In</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Customer customer = new Customer();
    private string errorMessage = string.Empty;
    private async Task HandleValidSubmit()
        {
        var response = await CustomerService.AddCustomerAsync(customer);
        customer.Password = string.Empty;
        if (response.Success)
            {
            await ProtectedLocalStor.SetAsync("UserName", customer.FirstName);
            await ProtectedLocalStor.SetAsync("CustomerId", customer.Id);
            NavigationManager.NavigateTo("/MyAccount", forceLoad: true);
            }
        else
            {
            errorMessage = response.Message;
            }
        }
}