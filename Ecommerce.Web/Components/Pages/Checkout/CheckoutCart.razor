@page "/Checkout"
@using Ecommerce.Web.Services
@inject ICartService CartService
@using Ecommerce.Web.Components.Toast
@using Ecommerce.Shared.Entities.Orders;
@using Ecommerce.Shared.Services;
@inject IOrderService OrderService



<div class="section-container" id="checkout-cart">
    <div class="container">
        <div class="checkout">
            <form name="form_checkout">
                <div class="checkout-header">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="step @(currentStep == 1 ? "active" : "")">
                                <a href="#" @onclick="() => SetStep(1)">
                                    <div class="number">1</div>
                                    <div class="info">
                                        <div class="title">Delivery Options</div>
                                        <div class="desc">Lorem ipsum dolor sit amet.</div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="step @(currentStep == 2 ? "active" : "")">
                                <a href="#" @onclick="() => SetStep(2)">
                                    <div class="number">2</div>
                                    <div class="info">
                                        <div class="title">Shipping Address</div>
                                        <div class="desc">Vivamus eleifend euismod.</div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="step @(currentStep == 3 ? "active" : "")">
                                <a href="#" @onclick="() => SetStep(3)">
                                    <div class="number">3</div>
                                    <div class="info">
                                        <div class="title">Payment</div>
                                        <div class="desc">Aenean ut pretium ipsum.</div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="step @(currentStep == 4 ? "active" : "")">
                                <a href="#" @onclick="() => SetStep(4)">
                                    <div class="number">4</div>
                                    <div class="info">
                                        <div class="title">Complete Payment</div>
                                        <div class="desc">Curabitur interdum libero.</div>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="checkout-body">
                    @if (currentStep == 1)
                        {


                        <div class="checkout-body">
                            <div class="table-responsive">

                                @if (CartItems != null && CartItems.Count > 0)
                                    {
                                    <table class="table table-cart">
                                        <thead style="border-bottom: 1px dotted #ccc;;">
                                            <tr>
                                                <th>Product</th>
                                                <th class="text-center">Price</th>
                                                <th class="text-center">Color</th>

                                            </tr>

                                        </thead>
                                        <tbody>

                                            @foreach (var item in CartItems)
                                                {
                                                <tr>
                                                    <td class="cart-product">
                                                        <div class="d-flex">
                                                            <div class="product-img h-100px w-100px d-flex align-items-md-start justify-content-center">
                                                                @*<img src="../assets/img/product/product-iphone-12.png" class="mw-100 mh-100" alt="" />*@
                                                                <img src="@(!string.IsNullOrEmpty(item.Thumbnail) ? item.Thumbnail : UrlHelper.GetImageUrl(item.VariantId,item.ImageName))"
                                                                     class="mw-100 mh-100" alt="" />
                                                            </div>
                                                            <div class="product-info ms-3">
                                                                <h5>@item.VariantName</h5>
                                                                <div class="desc"> </div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td class="cart-price text-center">€@item.VariantPrice</td>
                                                    <td class="cart-price text-center">Black</td>

                                                    <td class="cart-action text-center">
                                                        <i @onclick="() => RemoveItemFromCart(item.VariantId)" class="fa fa-trash text-dark" style="cursor: pointer;"></i>
                                                    </td>


                                                </tr>


                                                }
                                            <tr>
                                                <td class="cart-summary" colspan="4">
                                                    <div class="summary-container">
                                                        <div class="summary-row">
                                                            <div class="field">Cart Subtotal</div>
                                                            <div class="value">€@CalculateCartTotal()</div>
                                                        </div>
                                                        <div class="summary-row text-danger">
                                                            <div class="field">Free Shipping</div>
                                                            <div class="value">$0.00</div>
                                                        </div>
                                                        <div class="summary-row total">
                                                            <div class="field">Total</div>
                                                            <div class="value">€@CalculateCartTotal()</div>

                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    }

                            </div>
                        </div>

                        }
                    else if (currentStep == 2)
                        {
                        <CheckoutInfo  @ref="checkoutInfoComponent"/>
                        }
                    else if (currentStep == 3)
                        {
                        <CheckoutPayment />
                        }
                    else if (currentStep == 4)
                        {
                        <CheckoutComplete />
                        }
                </div>
                <div class="checkout-footer d-flex justify-content-between">
                    @if (currentStep > 1)
                        {
                        <button type="button" @onclick="BackStep" class="btn btn-white btn-theme me-auto w-150px">Back</button>
                        }

                <div class="ms-auto">
                    @if (currentStep < 4)
                        {
                        <button type="button" @onclick="NextStep" class="btn btn-dark btn-sm btn-theme w-150px">Next</button>
                        }
                    @if (currentStep == 2)
                        {
                        <button @onclick="PlaceOrder" class="btn btn-dark btn-lg">Place order</button>
                        }
                    else
                        {
                     
                        }
                </div>
                </div>

            </form>
        </div>
    </div>
</div>

<div id="policy" class="section-container bg-component">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-4 mb-4 mb-md-0">
                <div class="policy">
                    <div class="policy-icon"><i class="fa fa-truck"></i></div>
                    <div class="policy-info">
                        <h4>Free Delivery Over $100</h4>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 mb-4 mb-md-0">
                <div class="policy">
                    <div class="policy-icon"><i class="fa fa-umbrella"></i></div>
                    <div class="policy-info">
                        <h4>1 Year Warranty For Phones</h4>
                        <p>Cras laoreet urna id dui malesuada gravida. <br />Duis a lobortis dui.</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="policy">
                    <div class="policy-icon"><i class="fa fa-user-md"></i></div>
                    <div class="policy-info">
                        <h4>6 Month Warranty For Accessories</h4>
                        <p>Fusce ut euismod orci. Morbi auctor, sapien non eleifend iaculis.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<CartItemDto> CartItems = new List<CartItemDto>();
    private CheckoutInfo checkoutInfoComponent;
    private int currentStep = 1;
    [Inject]
    public ToastService ToastService { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
        {

        if (firstRender)
            {
            try
                {
                CartItems = await CartService.GetItems();
                StateHasChanged();
                }
            catch (Exception ex)
                {
                Console.WriteLine("Error loading cart items: " + ex.Message);
                }

            }


        }
    public void ShowToast()
        {
        ToastService.ShowToast("Employee addded Successfully", ToastLevel.Success);
        }



    private void SetStep(int step)
        {
        currentStep = step;
        }

    private double CalculateCartTotal()
        {
        return CartItems.Sum(item => item.VariantPrice * item.Qty);
        }

    private async Task RemoveItemFromCart(long variantId)
        {
        await CartService.RemoveItem(variantId);
        CartItems = await CartService.GetItems();
        StateHasChanged();
        ToastService.ShowToast("Item removed successfully", ToastLevel.Success);
        }

    private void NextStep()
        {

        if (currentStep < 4)
            {
            currentStep++;
            }
        }

    private void BackStep()
        {
        if (currentStep > 1)
            {
            currentStep--;
            }
        }

    private async Task PlaceOrder()
        {
        try
            {

            if (checkoutInfoComponent == null)
                {
                ToastService.ShowToast("Shipping information is missing.", ToastLevel.Error);
                return;
                }

            var shippingInfo = checkoutInfoComponent.shippingInfo;

            if (string.IsNullOrEmpty(shippingInfo.FirstName) ||
                string.IsNullOrEmpty(shippingInfo.LastName) ||
                string.IsNullOrEmpty(shippingInfo.StreetAddress) ||
                string.IsNullOrEmpty(shippingInfo.AreaCode) ||
                string.IsNullOrEmpty(shippingInfo.PrimaryPhone) ||
                string.IsNullOrEmpty(shippingInfo.ZipCode))
                {
                ToastService.ShowToast("Please fill out all the required shipping information.", ToastLevel.Error);
                return;
                }

            if (CartItems == null || !CartItems.Any())
                {
                ToastService.ShowToast("Your cart is empty. Add some items before placing an order.", ToastLevel.Error);
                return;
                }
            Order order = new Order
                {
                FirstName = shippingInfo.FirstName,
                LastName = shippingInfo.LastName,
                StreetAddress = shippingInfo.StreetAddress,
                AreaCode = shippingInfo.AreaCode,
                PrimaryPhone = shippingInfo.PrimaryPhone,
                ZipCode = shippingInfo.ZipCode,
                IsBusinessAddress = shippingInfo.IsBusinessAddress,
                TotalAmount = CartItems.Sum(item => item.VariantPrice * item.Qty) // Calculate total amount
                };

            foreach (var cartItem in CartItems)
                {
                order.OrderItems.Add(new OrderItem
                    {
                    ProductName = cartItem.VariantName,
                    Price = cartItem.VariantPrice,
                    ProductId = cartItem.ProductId,
                    Quantity = cartItem.Qty
                    });
                }
            var response = await OrderService.PlaceOrder(order);
            if (response != null && response.Success)
                {
                ToastService.ShowToast("Order placed successfully.", ToastLevel.Success);

                }
            else
                {

                string errorMessage = response?.Message ?? "Unknown error occurred during order placement.";
                Console.WriteLine("Error placing order: " + errorMessage);
                ToastService.ShowToast("Error placing order: " + errorMessage, ToastLevel.Error);
                }
            }
        catch (Exception ex)
            {
            Console.WriteLine("Exception during order placement: " + ex.Message);
            ToastService.ShowToast("An error occurred while placing the order. Please try again.", ToastLevel.Error);
            }
        }


}


<script>
    function showAlert(){
    $('#alert').show();
    setTimeout(function() {
        $('#alert').hide();
    }, 5000);
}
</script>