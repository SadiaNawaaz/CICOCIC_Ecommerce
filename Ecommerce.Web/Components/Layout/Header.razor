@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ICategoryService CategoryService
@inject IBrandService BrandService
@using Ecommerce.Shared.Services.Configurations
@inject ISliderService SliderService
@using Ecommerce.Web.Services; 
@inject CartStateService CartStateService
<style>
    details summary {
        list-style: none;
    }


    details[open] summary .fa-angle-right {
        transform: rotate(90deg);
    }

    a:hover {
        color: #348fe2 !important;
        text-decoration: none;
    }
</style>


<div id="header" class="header">
    <!-- BEGIN container -->
    <div class="container-fluid">
        <!-- BEGIN header-container -->
        <div class="header-container">
            <!-- BEGIN navbar-toggle -->
            <button type="button" class="navbar-toggle collapsed" data-bs-toggle="collapse" data-bs-target="#navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!-- END navbar-toggle -->
            <!-- BEGIN header-logo -->
            @*<div class="header-logo">
                    <a href="/">
                        <span class="brand-logo"></span>
                        <span class="brand-text">
                            <span> CICO</span>CIC
                            <small>e-commerce Plateform</small>
                        </span>
                    </a>
                </div>*@
            <!-- END header-logo -->
            <!-- BEGIN header-nav -->
            <div class="header-nav">
                <div class="collapse navbar-collapse" id="navbar-collapse">
                    <ul class="nav justify-content-start">
                        @*<li class="active"><a href="/">Home</a></li>*@
                        <li class="dropdown dropdown-full-width dropdown-hover">
                            <a href="#" data-bs-toggle="dropdown">
                                All
                                <b class="caret"></b>
                                <span class="arrow top"></span>
                            </a>

                            <div class="dropdown-menu p-0">

                                <div class="dropdown-menu-container">

                                    <div class="dropdown-menu-sidebar">
                                        <h4 class="title">Shop By Categories</h4>

                                        <ul class="dropdown-menu-list">
                                            @if (Categories != null && Categories.Count > 0)
                                                {
                                                foreach (var cat in Categories)
                                                    {
                                                    <li>


                                                        <a style="border-top: 1px solid var(--bs-component-dropdown-border-color);padding:7px" @onclick="@(async () => await GetData(cat))">

                                                            <img src="@UrlHelper.GetMenuIconImageUrl(cat.Id, cat.Icon)" alt="" style="height:20px;width:20px" />
                                                            @cat.Name
                                                        </a>
                                                    </li>

                                                    }

                                                }
                                        </ul>
                                    </div>
                                    <div class="dropdown-menu-content">


                                        <div class="container" style="margin-bottom:10px">
                                            <div class="row no-gutters">
                                                <div class="col-md-3 border">
                                                    <input type="text" class="form-control border-0" placeholder="Search" aria-label="Search" autocomplete="off" @bind="filter.KeyWord">
                                                </div>
                                                <div class="col-md-3 border">
                                                    <select class="form-control border-0" @bind="filter.CategoryId">
                                                        <option value="" selected>Choose category:</option>
                                                        @if (Categories != null && Categories.Count > 0)
                                                            {
                                                            @foreach (var cat in Categories)
                                                                {
                                                                <option value="@cat.Id">@cat.Name</option>
                                                                }
                                                            }
                                                    </select>
                                                </div>
                                                <div class="col-md-2 border">
                                                    <input type="text" class="form-control border-0" placeholder="Postal Code" autocomplete="off" @bind="filter.PostelCode">
                                                </div>
                                                <div class="col-md-2 border">
                                                    <select class="form-control border-0" @bind="filter.Distance">
                                                        <option value="" selected>Distance</option>
                                                        <option value="3">&lt; 3 km</option>
                                                        <option value="5">&lt; 5 km</option>
                                                        <option value="10">&lt; 10 km</option>
                                                        <option value="15">&lt; 15 km</option>
                                                        <option value="25">&lt; 25 km</option>
                                                        <option value="50">&lt; 50 km</option>
                                                        <option value="70">&lt; 70 km</option>
                                                        <option value="75">&lt; 75 km</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-2 border">
                                                    <a @onclick="@(async () => await SearchProductsAsync())" class="btn btn-primary" style="width:100%">Search</a>
                                                </div>
                                            </div>
                                        </div>
                                        <h4 class="title">Shop By Popular @MainCat</h4>

                                        <div class="row">


                                            @foreach (var category in SubCategories)
                                                {
                                                <div class="col-lg-3">
                                                    <span style="text-align:center;margin:5px;font-size:medium">
                                                        <b>
                                                            <img src="@UrlHelper.GetMenuIconImageUrl(category.Id, category.Icon)" alt="" style="height:20px;width:20px" /> @category.Name
                                                        </b>
                                                    </span>
                                                    <ul class="dropdown-menu-list" style="margin-top:10px">
                                                        @if (category.SubCategories != null)
                                                            {
                                                            foreach (var subCategory in category.SubCategories)
                                                                {
                                                                <li>
                                                                    <details>
                                                                        <summary>
                                                                            <i class="fa fa-angle-right"></i>


                                                                            &nbsp;@subCategory.Name
                                                                        </summary>
                                                                        <div class="details">
                                                                            @if (subCategory.SubCategories != null)
                                                                                {
                                                                                <ul>
                                                                                    @foreach (var subChild in subCategory.SubCategories)
                                                                                        {
                                                                                        <li>
                                                                                            <a style="font-size:small" @onclick="@(async () => await fnDetails(subChild.Id))">
                                                                                                @subChild.Name
                                                                                            </a>
                                                                                        </li>
                                                                                        }
                                                                                </ul>
                                                                                }
                                                                        </div>
                                                                    </details>
                                                                </li>
                                                                }
                                                            }
                                                    </ul>
                                                </div>
                                                }
                                        </div>
                                        <h4 class="title">Shop By Brand</h4>
                                        <ul class="dropdown-brand-list mb-0">

                                            @if (Brands != null && Brands.Count > 0)
                                                {
                                                @foreach (var b in Brands.Take(10))
                                                    {
                                                    <li>
                                                        <a @onclick="@(async () => await fnBrandDetails(b.Id))">
                                                            <img src="@UrlHelper.GetBrandImageUrl(b.Id, b.ImageUrl)" alt="@b.Name" />
                                                        </a>
                                                    </li>

                                                    }

                                                }


                                        </ul>
                                    </div>

                                </div>

                            </div>

                        </li>



                        @if (Categories != null && Categories.Count() > 0)
                            {
                            @foreach (var category in Categories.Take(7).OrderBy(a => a.Order))
                                {
                                <li class="dropdown dropdown-hover">
                                    <a href="#" data-bs-toggle="dropdown">

                                        @category.Name

                                        <b class="caret"></b>
                                        <span class="arrow top"></span>
                                    </a>
                                    @if (category.SubCategories.Any())
                                        {
                                        <div class="dropdown-menu">
                                            @foreach (var subCategory in category.SubCategories)
                                                {



                                                <a class="dropdown-item" href="/ProductByCategory?Id=@subCategory.Id">@subCategory.Name</a>
                                                }
                                        </div>
                                        }
                                </li>
                                }
                            }
                    </ul>
                </div>
            </div>

            <div class="header-nav">

                <ul class="nav justify-content-center">


                    @*@if (Categories != null && Categories.Count > 6)
                        {
                            @foreach (var category in Categories.Skip(6).Take(1).OrderBy(a => a.Order))
                            {
                                <li class="dropdown dropdown-hover">
                                    <a href="#" data-bs-toggle="dropdown">

                                        @category.Name
                                        <b class="caret"></b>
                                        <span class="arrow top"></span>
                                    </a>
                                    @if (category.SubCategories.Any())
                                    {
                                        <div class="dropdown-menu">
                                            @foreach (var subCategory in category.SubCategories)
                                            {
                                                <a class="dropdown-item" href="product.html">@subCategory.Name</a>
                                            }
                                        </div>
                                    }
                                </li>
                            }
                        }*@
                    <li style="width:20px">
                        <a href="/Checkout" class="header-cart">
                            <i class="fa fa-shopping-bag"></i>
                            @if(CartStateService.CartItemCount!=null && @CartStateService.CartItemCount>0)
                {

                }
                            <span class="total">@CartStateService.CartItemCount</span>
                            <span class="arrow top"></span>
                        </a>
                    </li>

                </ul>
            </div>

        </div>

    </div>

</div>
@code {


    #region Veriables
    private List<CategoryDto> Categories { get; set; } = new List<CategoryDto>();
    public List<CategoryDto> SubCategories = new List<CategoryDto>();
    public List<Brand> Brands = new List<Brand>();
    private List<Ecommerce.Shared.Entities.Configurations.Slider> sliders = new List<Ecommerce.Shared.Entities.Configurations.Slider>();
    private SearchFilter filter = new SearchFilter();


    #endregion



    #region FetchData

    protected override async Task OnInitializedAsync()
        {
        await LoadCategoryTreeAsync();
        await LoadBrands();

        }
    protected override async Task OnAfterRenderAsync(bool firstRender)
        {
        if (firstRender)
            {

            }
        }



    private async Task LoadCategoryTreeAsync()
        {
        try
            {
            var response = await CategoryService.GetCategoriesTreeDtoAsync();
            if (response.Success)
                {
                Categories = response.Data;
                StateHasChanged();
                }

            }
        catch (Exception ex)
            {

            }
        }
    #endregion

    #region FetechbyLevel2

    //this is level 2

    private async Task GetData(CategoryDto selectedCate)
        {
        MainCat = selectedCate.Name;
        SubCategories = selectedCate.SubCategories.ToList();

        }

    private async Task LoadBrands()
        {
        var response = await BrandService.GetBrandsAsync();
        if (response.Success)
            {
            Brands = response.Data;
            StateHasChanged();
            }
        else
            {

            }
        }

    #endregion

    public List<SubCategory> _subCategory = new List<SubCategory>();
    public List<SubCategory> _subsubCategory = new List<SubCategory>();
    public string MainCat = "";

    private async Task fnOpenSubsub(SubCategory product)
        {

        List<SubCategory> dummyData;

        dummyData = new List<SubCategory>
{
     new SubCategory { Name = product.Name+"-1" },
     new SubCategory { Name = product.Name+"-2"},
     new SubCategory { Name = product.Name+"-3" }

      };
        _subsubCategory = dummyData;


        }


    public class SubCategory
        {
        public string Name { get; set; }
        public string Category { get; set; }
        public List<SubCategory> Childs { get; set; }

        }

    public async Task fnDetails(long id)
        {

        await JSRuntime.InvokeVoidAsync("closeDropdownMenu");

        NavigationManager.NavigateTo($"/ProductByCategory?Id={id}");
        }
    private async Task SearchProductsAsync()
        {
        var keyword = filter.KeyWord ?? "";
        var categoryId = filter.CategoryId;
        var postalCode = filter.PostelCode ?? "";
        var distance = filter.Distance;
        var queryString = $"keyword={Uri.EscapeDataString(keyword)}&categoryId={categoryId}&postalCode={Uri.EscapeDataString(postalCode)}&distance={distance}";
        NavigationManager.NavigateTo($"/ProductZipCode?{queryString}");


        }
    public async Task fnBrandDetails(long id)
        {

        await JSRuntime.InvokeVoidAsync("closeDropdownMenu");

        NavigationManager.NavigateTo($"/Brand?Id={id}");
        }



    protected override void OnInitialized()
        {
        CartStateService.OnChange += StateHasChanged;
         CartStateService.InitializeCartCountAsync();

        }


    public void Dispose()
        {
        CartStateService.OnChange -= HandleStateChanged;
        }

    private async void HandleStateChanged()
        {

        await InvokeAsync(StateHasChanged);
        }

}