
@page "/AddMain"
@inject ISnackbar Snackbar
@rendermode InteractiveServer
@using Ecommerce.Shared.Dto;
@using Ecommerce.Shared.Services.Categories;
@inject ICategoryService CategoryService
<div class="d-flex align-items-center mb-3">
    <div>
        <ol class="breadcrumb mb-2">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/ProductList">Main</a></li>
            <li class="breadcrumb-item active"><i class="fa fa-arrow-back"></i> Product</li>
        </ol>
        <h1 class="page-header mb-0">Main Product </h1>
    </div>
</div>


<div class="row">
    <div class="col-xl-12">
        <div class="card border-0 mb-4">
            <div class="card-header h6 mb-0 bg-none p-3">
                <i class="fa fa-dolly fa-lg fa-fw text-dark text-opacity-50 me-1"></i> Product Information
            </div>
            <div class="card-body">

                <form class="row">
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="exampleInputEmail2" placeholder="Product Title">
                    </div>

                    <button type="submit" class="btn btn-primary w-100px me-5px">Save</button>

                </form>
            </div>
        </div>

        <div class="card border-0 mb-4">
            <div class="card-header h6 mb-0 bg-none p-3">
                <i class="fa fa-shield-halved fa-lg fa-fw text-dark text-opacity-50 me-1"></i> Levels
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-lg-0 mb-3">
                            <label class="form-label"> Type</label>
                            <select class="form-control" @onchange="OnLevel1Changed">
                                <option value="">Select Level 1</option>
                                @foreach (var category in Level1Categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-lg-0 mb-3">
                            <label class="form-label">level 2</label>
                            <select class="form-control" @onchange="OnLevel2Changed" disabled="@(!Level2Categories.Any())">
                                <option value="">Select Level 2</option>
                                @foreach (var category in Level2Categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-lg-6">
                            <div class="mb-lg-0 mb-3">
                                <label class="form-label">Level 3</label>
                                <select class="form-control" @onchange="OnLevel3Changed" disabled="@(!Level3Categories.Any())">
                                    <option value="">Select Level 3</option>
                                    @foreach (var category in Level3Categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="mb-lg-0 mb-3">
                                <label class="form-label">Level 4</label>
                                <select class="form-control" disabled="@(!Level4Categories.Any())">
                                    <option value="">Select Level 4</option>
                                    @foreach (var category in Level4Categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </select>
                            </div>
                        </div>


                    </div>


                </div>
            </div>
        </div>

        <div class="card border-0 mb-4">
            <div class="card-header h6 mb-0 bg-none p-3">
                <i class="fa fa-sitemap fa-lg fa-fw text-dark text-opacity-50 me-1"></i> .Product Specifications
            </div>
            <div class="card-body">
                <div class="alert alert-success">
                    Add features Specifications and thier value.
                </div>


                <div class="row align-items-center">
                    <div class="col-lg-6">

                    </div>
                    <div class="col-lg-4">
                        <input type="text" class="form-control" id="exampleInputPassword2" placeholder="Value">


                    </div>
                    <div class="col-lg-1">

                        <button class="btn btn-primary">Add</button>
                    </div>
                </div>
                <div>
                    <h3>Selected Items</h3>
                    <div class="table-responsive">
                        <table class="table table-striped mb-0 align-middle">
                            <thead>
                                <tr>

                                    <th>Feature</th>
                                    <th>Value</th>
                                    <th width="1%"></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>


                </div>
            </div>
        </div>


    </div>

</div>

@code {



    private List<CategoryDto> TreeItems { get; set; } = new List<CategoryDto>();

    private List<CategoryDto> Level1Categories { get; set; } = new List<CategoryDto>();
    private List<CategoryDto> Level2Categories { get; set; } = new List<CategoryDto>();
    private List<CategoryDto> Level3Categories { get; set; } = new List<CategoryDto>();
    private List<CategoryDto> Level4Categories { get; set; } = new List<CategoryDto>();


    #region

    protected override async Task OnInitializedAsync()
    {
        await LoadCategoryTreeAsync();
    }

    private async Task LoadCategoryTreeAsync()
    {
        try
        {
            var response = await CategoryService.GetCategoriesDtoAsync();
            if (response.Success)
            {
                TreeItems = response.Data;
                Level1Categories = TreeItems.Where(c => c.Level == 1).ToList();
            }
            else
            {
                Snackbar.Add(response.Message, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"An error occurred while loading category tree: {ex.Message}", Severity.Error);
        }
    }

    #endregion



    #region level
    private void OnLevel1Changed(ChangeEventArgs e)
    {
        var selectedLevel1Id = Convert.ToInt64(e.Value);
        var selectedLevel1 = TreeItems.FirstOrDefault(c => c.Id == selectedLevel1Id);
        ///Level2Categories = selectedLevel1?.SubCategories.Where(c => c.Level == 2).ToList() ?? new List<CategoryDto>();
        Level3Categories.Clear();
        Level4Categories.Clear();
    }

    private void OnLevel2Changed(ChangeEventArgs e)
    {
        var selectedLevel2Id = Convert.ToInt64(e.Value);
        var selectedLevel2 = Level2Categories.FirstOrDefault(c => c.Id == selectedLevel2Id);
        Level3Categories = selectedLevel2?.SubCategories.Where(c => c.Level == 3).ToList() ?? new List<CategoryDto>();
        Level4Categories.Clear();
    }

    private void OnLevel3Changed(ChangeEventArgs e)
    {
        var selectedLevel3Id = Convert.ToInt64(e.Value);
        var selectedLevel3 = Level3Categories.FirstOrDefault(c => c.Id == selectedLevel3Id);
        Level4Categories = selectedLevel3?.SubCategories.Where(c => c.Level == 4).ToList() ?? new List<CategoryDto>();
    }
    #endregion

}
